{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","to","Error404","Message","name","avatar","time","message","className","s","wrapper","img_container","src","alt","message_container","messageData","HW1","SuperButton","red","restProps","finalClassName","default","console","log","Affair","props","key","affair","_id","onClick","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","item","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","inputClass","errorClass","blue","GreetingContainer","users","addUserCallback","setName","setError","length","event","trim","alert","HW3","setUsers","newUser","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","PreJunior","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","Junior","JuniorPlus","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.04ec737a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__2F8YL\",\"img_container\":\"Message_img_container__1lotc\",\"message_container\":\"Message_message_container__3HJrW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__qPRCo\",\"errorInput\":\"SuperInputText_errorInput__wCArk\",\"error\":\"SuperInputText_error__2w2xs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1eEbH\",\"red\":\"SuperButton_red__3UKEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2BoUI\",\"error\":\"Greeting_error__aqHgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3iyA0\",\"column\":\"HW4_column__25g8K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2qY9l\",\"spanClassName\":\"SuperCheckbox_spanClassName__3p4ht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3PEJY\"};","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <div>\n            <div>\n                <h3>Links</h3>\n                <div><NavLink to=\"/PRE_JUNIOR\">Pre Junior</NavLink></div>\n                <div><NavLink to=\"/JUNIOR\">Junior</NavLink></div>\n                <div><NavLink to=\"/JUNIOR_PLUS\">Junior+</NavLink></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\nimport {PropsType} from \"./HW1\";\nimport s from './Message.module.css'\n\nfunction Message({name , avatar , time, message}: PropsType) {\n    return (\n        <div className={s.wrapper}>\n            <div className={s.img_container}>\n                <img src={avatar} alt=\"\"/>\n            </div>\n            <div className={s.message_container}>\n                <h4>{ name }</h4>\n                <p>{message}</p>\n                <span>{time}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Message from \"./Message\";\n\n\nexport type PropsType = {\n    avatar: string;\n    name: string;\n    message: string;\n    time: string;\n}\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"some text\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div className='wrapper' >\n\n            <Message name={messageData.name} avatar={messageData.avatar} message={messageData.message} time={messageData.time}/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n    console.log({restProps})\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;","import React from \"react\";\nimport {AffairType, DeleteType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n\n    affair: AffairType\n    deleteAffairCallback: DeleteType\n\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id)\n    }\n    return (\n        <div>\n            <div key={props.affair._id}> {props.affair.name}  <SuperButton red onClick={deleteCallback}>X</SuperButton></div>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, DeleteType, MyFilterType} from \"./HW2\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: MyFilterType\n    deleteAffairCallback: DeleteType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    };\n    const setHigh = () => {\n        props.setFilter('high')\n    };\n    const setMiddle = () => {\n        props.setFilter('middle')\n    };\n    const setLow = () => {\n        props.setFilter('low')\n    };\n\n    return (\n        <div>\n            {mappedAffairs}\n            <SuperButton onClick={setAll} >All</SuperButton>\n            <SuperButton onClick={setHigh} >High</SuperButton>\n            <SuperButton onClick={setMiddle} >Middle</SuperButton>\n            <SuperButton onClick={setLow} >Low</SuperButton>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\";\nexport type AffairType = {\n    _id : number\n    name : string\n    priority: AffairPriorityType;\n};\nexport type FilterType = \"all\" | AffairPriorityType;\nexport type DeleteType = (_id: number) => void;\nexport type MyFilterType = (filter: FilterType) => void;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === \"all\") return affairs;\n    else if (filter === \"high\"){\n        return affairs.filter((el)=>el.priority === \"high\")\n    }\n    else if (filter === \"middle\"){\n            return affairs.filter((el)=>el.priority === \"middle\")}\n        else return affairs.filter((el)=>el.priority === \"low\");\n\n    }\n\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n   return affairs.filter((item)=>item._id !== _id);\n\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? `${s.errorInput} ${className}` : s.superInput }`; // need to fix with (?:) and s.superInput (s.errorInput)\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}> {error} </span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers}) => {\n    const inputClass = s.error;\n    const errorClass = error ? inputClass : ''\n    return (\n        <div>\n            <SuperInputText\n                value={name}\n                onChange={setNameCallback}\n                error={errorClass}\n                className={s.blue} // проверьте, рабоет ли смешивание классов\n            />\n            {/*<input value={name} onChange={setNameCallback} className={errorClass}/>*/}\n            {/*<span>{error}</span>*/}\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void;\n}\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\");\n\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => {\n        setName(event.currentTarget.value);\n        setError('')\n    };\n\n    const addUser = () => {\n        if (name.trim() !== '') {\n            addUserCallback(name);\n            alert(`Hello ${name} !`);\n        } else {\n            setError('Error')\n        }\n        setName('')\n    };\n\n    const totalUsers = users.length;\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\nexport type UserType = {\n    _id: string\n    name: string\n}\n\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n    const addUserCallback = (name: string) => { // need to fix any\n        const newUser: UserType = {_id: v1(), name: name}\n        setUsers([newUser, ...users])  // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text);\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n\n   const testOnChange = (e: ChangeEvent<HTMLInputElement>) =>  setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    className={s.blue}\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e);\n    };\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        // setValue();\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <HW6 />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior;\r\n","import React from \"react\";\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <h1>HELLO I'M JUNIOR+</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;\r\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={\"/\"} exact render={() => <Redirect to={\"PRE_JUNIOR\"}/>}/>\n            <Route path={'/PRE_JUNIOR'} render={() => <PreJunior/>}/>\n            <Route path={'/JUNIOR'} render={() => <Junior/>}/>\n            <Route path={'/JUNIOR_PLUS'} render={() => <JuniorPlus/>}/>\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n            <Header/>\n            <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}